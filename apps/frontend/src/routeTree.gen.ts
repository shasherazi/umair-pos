/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ShopsIndexRouteImport } from './routes/shops/index'
import { Route as SalesmenIndexRouteImport } from './routes/salesmen/index'
import { Route as InventoryIndexRouteImport } from './routes/inventory/index'
import { Route as StoresNewRouteImport } from './routes/stores/new'
import { Route as ShopsNewRouteImport } from './routes/shops/new'
import { Route as ShopsIdRouteImport } from './routes/shops/$id'
import { Route as SalesmenNewRouteImport } from './routes/salesmen/new'
import { Route as SalesmenIdRouteImport } from './routes/salesmen/$id'
import { Route as InventoryNewRouteImport } from './routes/inventory/new'
import { Route as InventoryIdRouteImport } from './routes/inventory/$id'
import { Route as AdminUnlockRouteImport } from './routes/admin/unlock'
import { Route as ReportsShopsIndexRouteImport } from './routes/reports/shops/index'
import { Route as ReportsSalesIndexRouteImport } from './routes/reports/sales/index'
import { Route as ReportsProductsIndexRouteImport } from './routes/reports/products/index'
import { Route as ReportsSalesNewRouteImport } from './routes/reports/sales/new'
import { Route as ReportsSalesIdRouteImport } from './routes/reports/sales/$id'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShopsIndexRoute = ShopsIndexRouteImport.update({
  id: '/shops/',
  path: '/shops/',
  getParentRoute: () => rootRouteImport,
} as any)
const SalesmenIndexRoute = SalesmenIndexRouteImport.update({
  id: '/salesmen/',
  path: '/salesmen/',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoryIndexRoute = InventoryIndexRouteImport.update({
  id: '/inventory/',
  path: '/inventory/',
  getParentRoute: () => rootRouteImport,
} as any)
const StoresNewRoute = StoresNewRouteImport.update({
  id: '/stores/new',
  path: '/stores/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ShopsNewRoute = ShopsNewRouteImport.update({
  id: '/shops/new',
  path: '/shops/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ShopsIdRoute = ShopsIdRouteImport.update({
  id: '/shops/$id',
  path: '/shops/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const SalesmenNewRoute = SalesmenNewRouteImport.update({
  id: '/salesmen/new',
  path: '/salesmen/new',
  getParentRoute: () => rootRouteImport,
} as any)
const SalesmenIdRoute = SalesmenIdRouteImport.update({
  id: '/salesmen/$id',
  path: '/salesmen/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoryNewRoute = InventoryNewRouteImport.update({
  id: '/inventory/new',
  path: '/inventory/new',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoryIdRoute = InventoryIdRouteImport.update({
  id: '/inventory/$id',
  path: '/inventory/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUnlockRoute = AdminUnlockRouteImport.update({
  id: '/admin/unlock',
  path: '/admin/unlock',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsShopsIndexRoute = ReportsShopsIndexRouteImport.update({
  id: '/reports/shops/',
  path: '/reports/shops/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsSalesIndexRoute = ReportsSalesIndexRouteImport.update({
  id: '/reports/sales/',
  path: '/reports/sales/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsProductsIndexRoute = ReportsProductsIndexRouteImport.update({
  id: '/reports/products/',
  path: '/reports/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsSalesNewRoute = ReportsSalesNewRouteImport.update({
  id: '/reports/sales/new',
  path: '/reports/sales/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsSalesIdRoute = ReportsSalesIdRouteImport.update({
  id: '/reports/sales/$id',
  path: '/reports/sales/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin/unlock': typeof AdminUnlockRoute
  '/inventory/$id': typeof InventoryIdRoute
  '/inventory/new': typeof InventoryNewRoute
  '/salesmen/$id': typeof SalesmenIdRoute
  '/salesmen/new': typeof SalesmenNewRoute
  '/shops/$id': typeof ShopsIdRoute
  '/shops/new': typeof ShopsNewRoute
  '/stores/new': typeof StoresNewRoute
  '/inventory': typeof InventoryIndexRoute
  '/salesmen': typeof SalesmenIndexRoute
  '/shops': typeof ShopsIndexRoute
  '/reports/sales/$id': typeof ReportsSalesIdRoute
  '/reports/sales/new': typeof ReportsSalesNewRoute
  '/reports/products': typeof ReportsProductsIndexRoute
  '/reports/sales': typeof ReportsSalesIndexRoute
  '/reports/shops': typeof ReportsShopsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin/unlock': typeof AdminUnlockRoute
  '/inventory/$id': typeof InventoryIdRoute
  '/inventory/new': typeof InventoryNewRoute
  '/salesmen/$id': typeof SalesmenIdRoute
  '/salesmen/new': typeof SalesmenNewRoute
  '/shops/$id': typeof ShopsIdRoute
  '/shops/new': typeof ShopsNewRoute
  '/stores/new': typeof StoresNewRoute
  '/inventory': typeof InventoryIndexRoute
  '/salesmen': typeof SalesmenIndexRoute
  '/shops': typeof ShopsIndexRoute
  '/reports/sales/$id': typeof ReportsSalesIdRoute
  '/reports/sales/new': typeof ReportsSalesNewRoute
  '/reports/products': typeof ReportsProductsIndexRoute
  '/reports/sales': typeof ReportsSalesIndexRoute
  '/reports/shops': typeof ReportsShopsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin/unlock': typeof AdminUnlockRoute
  '/inventory/$id': typeof InventoryIdRoute
  '/inventory/new': typeof InventoryNewRoute
  '/salesmen/$id': typeof SalesmenIdRoute
  '/salesmen/new': typeof SalesmenNewRoute
  '/shops/$id': typeof ShopsIdRoute
  '/shops/new': typeof ShopsNewRoute
  '/stores/new': typeof StoresNewRoute
  '/inventory/': typeof InventoryIndexRoute
  '/salesmen/': typeof SalesmenIndexRoute
  '/shops/': typeof ShopsIndexRoute
  '/reports/sales/$id': typeof ReportsSalesIdRoute
  '/reports/sales/new': typeof ReportsSalesNewRoute
  '/reports/products/': typeof ReportsProductsIndexRoute
  '/reports/sales/': typeof ReportsSalesIndexRoute
  '/reports/shops/': typeof ReportsShopsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/admin/unlock'
    | '/inventory/$id'
    | '/inventory/new'
    | '/salesmen/$id'
    | '/salesmen/new'
    | '/shops/$id'
    | '/shops/new'
    | '/stores/new'
    | '/inventory'
    | '/salesmen'
    | '/shops'
    | '/reports/sales/$id'
    | '/reports/sales/new'
    | '/reports/products'
    | '/reports/sales'
    | '/reports/shops'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/admin/unlock'
    | '/inventory/$id'
    | '/inventory/new'
    | '/salesmen/$id'
    | '/salesmen/new'
    | '/shops/$id'
    | '/shops/new'
    | '/stores/new'
    | '/inventory'
    | '/salesmen'
    | '/shops'
    | '/reports/sales/$id'
    | '/reports/sales/new'
    | '/reports/products'
    | '/reports/sales'
    | '/reports/shops'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/admin/unlock'
    | '/inventory/$id'
    | '/inventory/new'
    | '/salesmen/$id'
    | '/salesmen/new'
    | '/shops/$id'
    | '/shops/new'
    | '/stores/new'
    | '/inventory/'
    | '/salesmen/'
    | '/shops/'
    | '/reports/sales/$id'
    | '/reports/sales/new'
    | '/reports/products/'
    | '/reports/sales/'
    | '/reports/shops/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  AdminUnlockRoute: typeof AdminUnlockRoute
  InventoryIdRoute: typeof InventoryIdRoute
  InventoryNewRoute: typeof InventoryNewRoute
  SalesmenIdRoute: typeof SalesmenIdRoute
  SalesmenNewRoute: typeof SalesmenNewRoute
  ShopsIdRoute: typeof ShopsIdRoute
  ShopsNewRoute: typeof ShopsNewRoute
  StoresNewRoute: typeof StoresNewRoute
  InventoryIndexRoute: typeof InventoryIndexRoute
  SalesmenIndexRoute: typeof SalesmenIndexRoute
  ShopsIndexRoute: typeof ShopsIndexRoute
  ReportsSalesIdRoute: typeof ReportsSalesIdRoute
  ReportsSalesNewRoute: typeof ReportsSalesNewRoute
  ReportsProductsIndexRoute: typeof ReportsProductsIndexRoute
  ReportsSalesIndexRoute: typeof ReportsSalesIndexRoute
  ReportsShopsIndexRoute: typeof ReportsShopsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shops/': {
      id: '/shops/'
      path: '/shops'
      fullPath: '/shops'
      preLoaderRoute: typeof ShopsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/salesmen/': {
      id: '/salesmen/'
      path: '/salesmen'
      fullPath: '/salesmen'
      preLoaderRoute: typeof SalesmenIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventory/': {
      id: '/inventory/'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof InventoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stores/new': {
      id: '/stores/new'
      path: '/stores/new'
      fullPath: '/stores/new'
      preLoaderRoute: typeof StoresNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shops/new': {
      id: '/shops/new'
      path: '/shops/new'
      fullPath: '/shops/new'
      preLoaderRoute: typeof ShopsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shops/$id': {
      id: '/shops/$id'
      path: '/shops/$id'
      fullPath: '/shops/$id'
      preLoaderRoute: typeof ShopsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/salesmen/new': {
      id: '/salesmen/new'
      path: '/salesmen/new'
      fullPath: '/salesmen/new'
      preLoaderRoute: typeof SalesmenNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/salesmen/$id': {
      id: '/salesmen/$id'
      path: '/salesmen/$id'
      fullPath: '/salesmen/$id'
      preLoaderRoute: typeof SalesmenIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventory/new': {
      id: '/inventory/new'
      path: '/inventory/new'
      fullPath: '/inventory/new'
      preLoaderRoute: typeof InventoryNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventory/$id': {
      id: '/inventory/$id'
      path: '/inventory/$id'
      fullPath: '/inventory/$id'
      preLoaderRoute: typeof InventoryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/unlock': {
      id: '/admin/unlock'
      path: '/admin/unlock'
      fullPath: '/admin/unlock'
      preLoaderRoute: typeof AdminUnlockRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/shops/': {
      id: '/reports/shops/'
      path: '/reports/shops'
      fullPath: '/reports/shops'
      preLoaderRoute: typeof ReportsShopsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/sales/': {
      id: '/reports/sales/'
      path: '/reports/sales'
      fullPath: '/reports/sales'
      preLoaderRoute: typeof ReportsSalesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/products/': {
      id: '/reports/products/'
      path: '/reports/products'
      fullPath: '/reports/products'
      preLoaderRoute: typeof ReportsProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/sales/new': {
      id: '/reports/sales/new'
      path: '/reports/sales/new'
      fullPath: '/reports/sales/new'
      preLoaderRoute: typeof ReportsSalesNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/sales/$id': {
      id: '/reports/sales/$id'
      path: '/reports/sales/$id'
      fullPath: '/reports/sales/$id'
      preLoaderRoute: typeof ReportsSalesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  AdminUnlockRoute: AdminUnlockRoute,
  InventoryIdRoute: InventoryIdRoute,
  InventoryNewRoute: InventoryNewRoute,
  SalesmenIdRoute: SalesmenIdRoute,
  SalesmenNewRoute: SalesmenNewRoute,
  ShopsIdRoute: ShopsIdRoute,
  ShopsNewRoute: ShopsNewRoute,
  StoresNewRoute: StoresNewRoute,
  InventoryIndexRoute: InventoryIndexRoute,
  SalesmenIndexRoute: SalesmenIndexRoute,
  ShopsIndexRoute: ShopsIndexRoute,
  ReportsSalesIdRoute: ReportsSalesIdRoute,
  ReportsSalesNewRoute: ReportsSalesNewRoute,
  ReportsProductsIndexRoute: ReportsProductsIndexRoute,
  ReportsSalesIndexRoute: ReportsSalesIndexRoute,
  ReportsShopsIndexRoute: ReportsShopsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
